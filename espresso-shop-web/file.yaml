NAME: espresso-shop-web
LAST DEPLOYED: Sat Jan 27 23:00:31 2024
NAMESPACE: s6rasheedat
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: espresso-shop-web/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: espresso-shop-web-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      version: v1
---
# Source: espresso-shop-web/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: espresso-shop-web-sa
  labels:
    app: espresso-shop-web
---
# Source: espresso-shop-web/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: espresso-shop-web-sc
  labels:
    app: espresso-shop-web
type: Opaque
data:
  password: dGVzdGluZw==  # Base64-encoded value of "testing"
---
# Source: espresso-shop-web/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: espresso-shop-web
  labels:
    app: espresso-shop-web
data:
  authKey: "sentinel-password"
  port: "6379"
  masterGroupName: "mymaster"
---
# Source: espresso-shop-web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: espresso-shop-web-svc
  labels:
    app: espresso-shop-web
spec:
  type: NodePort
  ports:
    - port: 8090
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: espresso-shop-web
    version: v1
---
# Source: espresso-shop-web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: espresso-shop-web
  labels:
    app: espresso-shop-web
spec:
  selector:
    matchLabels:
      version: v1
      app: espresso-shop-web
  template:
    metadata:
      labels:
        version: v1
        app: espresso-shop-web
    spec:
      serviceAccountName: espresso-shop-web-sa
      securityContext:
        {}
      containers:
        - name: espresso-shop-web
          securityContext:
            {}
          image: "devopseasylearning/s6rasheedat-espresso-web:v1.0.0"
          env:
            - name: ProductCatalogUrl
              value: "http://espresso-shop-product-catalog-svc:8091"
            - name: ReviewsUrl
              value: "http://espresso-shop-reviews-svc:8092"
          envFrom:
            - configMapRef: 
                name: espresso-shop-web
          envFrom:
            - secretRef:
                name: redis-secret
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
---
# Source: espresso-shop-web/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: espresso-shop-web-hpa
  labels:
    app: espresso-shop-web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: espresso-shop-web
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace s6rasheedat -o jsonpath="{.spec.ports[0].nodePort}" services espresso-shop-web)
  export NODE_IP=$(kubectl get nodes --namespace s6rasheedat -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
